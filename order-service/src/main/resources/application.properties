
# General Config
server.port=8081
spring.application.name=order-service
spring.cloud.compatibility-verifier.enabled=false

# Database Config
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/orders
spring.datasource.username=root
spring.datasource.password=pass
spring.jpa.hibernate.ddl-auto=create-drop

# Discovery server config
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# health metrics config
#enable circuit breaker in actuator endpoint
management.health.circuitbreakers.enabled=true
#expose all endpoints. Only health metrics is exposed by default.
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j config
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumbersOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# Resilience4j timeout config
resilience4j.timelimiter.instances.inventory.timeout-duration=5s

# Resilience4j retry config
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

# Distributed tracing Config
spring.zipkin.baseUrl=http:///localhost:9411
spring.sleuth.sampler.probability=1.0

# Kafka Config
spring.kafka.bootstrap-server=localhost:9092
spring.kafka.template.default-topic=notification-topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=token:com.research.orderservice.event.OrderPublishRecord
